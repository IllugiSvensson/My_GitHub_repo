#include <stdio.h>
#include <math.h>
#include <string.h>
#include <stdlib.h>
#include <locale.h>

//Задача на строки
//Описать функцию, возвращающую строку с двоичным представлением десятичного числа,
//переданного в аргументе этой функции.

void dec2bin(int dec, char *result) {
	
	char bin[64];
	int i = 0;
	int shift = dec;	
	
	while (shift != 0) {		
		shift = shift >> 1;		
		i++;					//Считаем число разрядов
	}
	
	bin[i] = '\0';					//Обозначим конец строки
	
	while (dec > 0) {
		bin [i-1] = (dec % 2)? '1' : '0';  //Переводим число в двоичный вид
		i--;				   //заполняя разряды
		dec /= 2;
	}
	
	strcat (result, bin); 	//склеим результирующую строку
}

//Задача на структуры
//Описать структуру "прямоугольник", содержащую целочисленные значения длины, ширины,
//периметра и площади прямоугольника. Написать функцию, принимающую на вход указатель
//на структуру, подсчитывающую и записывающую площадь и периметр данного прямоугольника в структуру.

typedef struct Rectangle {	//Новый тип данных
	int height;
	int width;
	int area;
	int perimeter;
} rectangle;

void calcRectangle(rectangle *r) {
	r->area = r->height * r->width;				//Обращаемся к полям структуры
	r->perimeter = (r->height + r->width) * 2;  		//считаем площадь и периметр
}

//Задача на выделение памяти
//Написать функцию-обёртку, возвращающую указатель на область памяти, которую затем можно
//использовать как массив из элементов типа integer. Количество элементов указывается в
//аргументе функции. Массив должен быть гарантированно инициализирован нулями. Для проверки -
//заполните этот массив и выведите на экран.

int *p_alloc(int l) {
	return calloc(l, sizeof(int));
}

//Спец задание.
//Описать структуру «прямая линия», которая должна состоять из длины и двух внутренних 
//структур типа «точка», в каждой из которых должны содержаться координаты по осям 'х' и 'у'. 
//Описать функцию, принимающую на вход координаты двух точек и возвращающую структуру «линия» 
//с подсчитанной длиной.

typedef struct Point { //Тип данных "Точка"
	int x;
	int y;
} point;

typedef struct Line { //Тип данных "Линия" включающая в себя "Точки"
	float length;
	point p1;
	point p2;
} line;

line calc_line(int x1, int y1, int x2, int y2) {
	line L;				//Структура "Линия"
	L.p1.x = x1;
	L.p1.y = y1;
	L.p2.x = x2;
	L.p2.y = y2;
	L.length = sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2)); 	//Считаем длину
	return L;
}

int main(int argc, char const *argv[]) {
setlocale(LC_ALL,"Rus");

	char binary[64] = "b'";
	int num;
	
	printf("Преобразуем десятичное в двоичное число.");
	printf("\nВведите десятичное число для перевода: ");
	scanf("%d", &num);
	
		dec2bin(num, binary);
		
	printf("Число d'%d в двоичной форме: %s.\n", num, binary);
	puts("");
	
	rectangle Rectangle; //Объявляем структуру

	printf("Посчитаем периметр и площать прямоугольника.");
	printf("\nВведите высоту прямоугольника: ");
	scanf("%d", &Rectangle.height);
	printf("Введите ширину прямоугольника: ");
	scanf("%d", &Rectangle.width);
	
		calcRectangle(&Rectangle);
		
	printf("Площадь и периметр прямоугольника равны %d и %d соответственно.\n", 
		Rectangle.area, Rectangle.perimeter);
	puts("");
	
	const int size = 10;
	int *array = p_alloc(size);	//Используем очищенную область памяти как массив
	int i;
	
	printf("Исходный массив нулевых элементов:\n");
	for (i = 0; i < size; i++)			//Выводим массив из нулей
		printf("%d ", *(array + i));	
	puts("");
	
	printf("Массив, заполненный элементами:\n");	
	for (i = 0; i < size; i++){
		*(array + i) = i * i + 1;		//Заполняем массив каким то содержимым 
		printf("%d ", *(array + i));		//Выводим на экран
	}
	puts("\n");

	int x1, x2, y1, y2;
	
	printf("Введите координату х первой точки: ");
	scanf("%d", &x1);
	printf("Введите координату y первой точки: ");
	scanf("%d", &y1);
	printf("Введите координату х второй точки: ");
	scanf("%d", &x2);
	printf("Введите координаты y второй точки: ");
	scanf("%d", &y2);
	puts("");
	
		line L = calc_line(x1, y1, x2, y2);
		
	printf("Координаты первой точки (%d,%d).\n",L.p1.x, L.p1.y);
	printf("Координаты второй точки (%d,%d).\n",L.p2.x, L.p2.y);
	printf("Кратчайшее расстояние между двумя точками: %f.", L.length);
	puts("");
	
return 0;
}

